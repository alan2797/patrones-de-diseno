/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prototype;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.Polygon;
import java.util.ArrayList;
import java.util.Hashtable;
import java.util.LinkedList;
import javax.swing.DefaultListModel;

/**
 *
 * @author Usuario
 */
public class Cliente extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    ArrayList array = new ArrayList();
    DefaultListModel modelo = new DefaultListModel();
    
     private Hashtable obj = new Hashtable();
    LinkedList<Graphics2D> gra =new LinkedList<Graphics2D>();
     LinkedList<String> gra2 =new LinkedList<String>();
    private Hashtable l = new Hashtable();
    private int contador = 0;
    String nombre;
    int x,y;
    String tipo;
    Color color;
    public Cliente() {
        initComponents();
        jList1.setModel(modelo);
        ArrayList array = new ArrayList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jccolor = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jctipo = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Nuevo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jccolor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Verde", "Negro", "Azul", "Rojo" }));

        jTextField1.setText("100");

        jTextField2.setText("150");
        jTextField2.setToolTipText("");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel1.setText("X");

        jLabel2.setText("Y");

        jctipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cuadrado", "Circulo" }));

        jButton2.setText("Clon");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Editar");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel1)
                .addGap(7, 7, 7)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124)
                .addComponent(jctipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                .addComponent(jccolor, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jctipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jccolor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(8, 8, 8)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        parametros();
        if(jctipo.getSelectedItem()=="Cuadrado"){
            crearcuadrado();
        }else{
            crearcirculo();
        }
       // Prototype p  = new Prototype();
        //p.paint(this.getGraphics());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        System.out.println(jList1.getSelectedValue());
        setparams(jList1.getSelectedValue());
    }//GEN-LAST:event_jList1MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       parametros();
       
       Figura f = (Figura)obj.get(jList1.getSelectedValue());
       f.setColor(color);
       f.setX(x);
       f.setY(y);
       dibujar();
       
       info();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //clonar(jList1.getSelectedValue());
        clonarsup(jList1.getSelectedValue());
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JComboBox<String> jccolor;
    private javax.swing.JComboBox<String> jctipo;
    // End of variables declaration//GEN-END:variables
    
    private void clonar(String elem){
        System.out.println(elem);
        nombre = "Clon" + elem;
        Figura f =(Figura) obj.get(elem);
        f = f.clonar();
        f.setNombre(nombre);
        System.out.println(nombre);
        obj.put(nombre, f);
        gra2.add(nombre);
        modelo.addElement(nombre);
        dibujar();
    }
    
    private void clonarsup(String elem){
        
        nombre = elem;
        Figura f =(Figura) obj.get(elem);
        f.setNombre(nombre);
        //f.setX(300);
        System.out.println(nombre);
        obj.put(nombre, f);
        gra2.add(nombre);
        modelo.addElement(nombre);
        dibujar();
        info();
    }
    
    
    private void info(){
        
            for (int i = 0 ;  i<gra2.size() ; i++){
                Figura f = (Figura) obj.get(gra2.get(i));
                System.out.println("---------Elemento:"+ i+"----------------");
                System.out.println("NombreFigura: " + f.getNombre());
                System.out.println("Posicion en X:"+f.getX() + " , Y:"+ f.getY());
            }
            
        }
    
    private void crearcuadrado() {    
        Figura f = new PrototipoCuadrado(nombre,100,x,y,color,"Cuadrado");
        System.out.println("X:"+ x + " - " + "Y:" + y);
        obj.put(nombre, f);
        gra2.add(nombre);
       // modelo.clear();
        //array.add(nombre);
        modelo.addElement(nombre);
        dibujar();
        
    }

    private void crearcirculo() {
        Figura f = new PrototipoCirculo(nombre,100,x,y,color,"Circulo");
        System.out.println("X:"+ x + " - " + "Y:" + y);
        obj.put(nombre, f);
        gra2.add(nombre);
        
        //modelo.clear();
        //array.add(nombre);
        modelo.addElement(nombre);
        dibujar();
        
        
    }
    
    private void dibujar(){
    
        super.paint(this.getGraphics());
        Graphics2D g2d = (Graphics2D) this.getGraphics();
            
        for (int i = 0 ;  i<gra2.size() ; i++){
            Figura f = (Figura) obj.get(gra2.get(i));
            
            
            
            if(f.getTipo()=="Circulo"){
                g2d.setColor(f.getColor());
                g2d.setStroke(new BasicStroke(5));
                g2d.drawOval(f.getX(), f.getY(), f.getTamaño(), f.getTamaño());
            }else{
                int x1[] ={f.getX(),f.getTamaño()+f.getX(),f.getTamaño()+f.getX(),f.getX()};
                int y1[] = {f.getY(),f.getY(),f.getTamaño()+f.getY(),f.getTamaño()+f.getY()};
                g2d.setColor(f.getColor());
                g2d.setStroke(new BasicStroke(5));
                Polygon p = new Polygon(x1,y1,4);
                g2d.drawPolygon(p);
            }
            
        }
    };
    
    
    private void parametros() {
        contador++;
        if(jctipo.getSelectedItem()=="Cuadrado"){
            nombre = "Cuadrado" + contador;
        }else{
            nombre = "Circulo" + contador;
        }
         
         x=Integer.parseInt(jTextField1.getText());
         y=Integer.parseInt(jTextField2.getText());
        if(jccolor.getSelectedItem()=="Verde"){
            color = Color.GREEN;
        }else if(jccolor.getSelectedItem()=="Negro"){
            color = Color.BLACK;
        }else if(jccolor.getSelectedItem()=="Azul"){
            color = Color.BLUE;
        }else{
            color = Color.RED;
        }
    }
    
    private void setparams(String elem){
         Figura f = (Figura) obj.get(elem);
         //System.out.println("X:"+ f.getX() + " - " + "Y:" + f.getY());
         jTextField1.setText(String.valueOf(f.getX()));
         jTextField2.setText(String.valueOf(f.getY()));
         jctipo.setSelectedItem(f.getTipo());
         
        if(f.getColor() == Color.GREEN){
            jccolor.setSelectedItem("Verde");
        }else if(f.getColor() == Color.BLACK){
            jccolor.setSelectedItem("Negro");
        }else if(f.getColor() == Color.BLUE){
            jccolor.setSelectedItem("Azul");
        }else{
           jccolor.setSelectedItem("Rojo");
        }
         jccolor.setSelectedItem(f.getColor());
         /*
         x = f.getX();
         y = f.getY();
         color = f.getColor();
         */
         tipo = f.getTipo();
         
    }
}
